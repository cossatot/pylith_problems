[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------

# This is a simple example of adding a Nuemann BC to the fault.


[pylithapp.journal.info]
faultcohesivekin = 1

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
# Define the total time for the simulation and the default time step size.
total_time = 0.0*s ; total time of simulation
# Define an appropriat time step for simulations. Important for
# nondimensionalization of velocities and slip rates.
dt = 5.0*year

[pylithapp.timedependent]
# Set bc to an array of 3 boundary conditions: 'x_pos','x_neg', and 'z_neg'.
bc = [x_pos,x_neg,z_neg]

# MGK Testing CUDA
#formulation = pylith.problems.ImplicitCUDA

[pylithapp.timedependent.implicit]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and the ground surface.
#output = [domain,subdomain]
output = [domain]

solver = pylith.problems.SolverNonlinear
# Set subdomain component to OutputSolnSubset (boundary of the domain).
#output.subdomain = pylith.meshio.OutputSolnSubset

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Set the parameters for Dirichlet boundary conditions applied on the
# +x, -x, and -z faces of the box.
#
# We fix the x and y degrees of freedom on the +x and -x faces, and
# fix the z degree of freedom on the bottom (-z) face.
#
# For x_pos and x_neg, we change the database from ZeroDispDB (which
# specifies a zero value) to SimpleDB (which uses a data file to
# specify a spatial variation).
#
# For z_neg, we keep the default ZeroDispDB, since we just want zero
# z-displacements on that boundary.
#

# The label corresponds to the name of the nodeset in CUBIT.

# +x face
[pylithapp.timedependent.bc.x_pos]
bc_dof = [0, 1, 2]
label = Face_XPos
db_initial = spatialdata.spatialdb.UniformDB
db_initial.label = Dirichlet BC on +x
db_initial.values = [displacement-x,displacement-y, displacement-z]
db_initial.data = [0*m, 0*m, 0*m]
#db_initial.iohandler.filename = spatialdb/fixeddisp_axial_shear.spatialdb
#
## -x face
[pylithapp.timedependent.bc.x_neg]
bc_dof = [0, 1, 2]
label = Face_XNeg
db_initial.values = [displacement-x,displacement-y, displacement-z]
db_initial.data = [0*m, 0*m, 0*m]
#db_initial.iohandler.filename = spatialdb/fixeddisp_axial_shear.spatialdb
#
## -z face
[pylithapp.timedependent.bc.z_neg]
bc_dof = [2]
label = Face_ZNeg
db_initial.label = Dirichlet BC on -z




# -------
# fault
# -------

[pylithapp.timedependent]
interfaces = [fault]
interfaces.fault = pylith.faults.FaultCohesiveDyn


[pylithapp.timedependent.interfaces.fault]
id = 26
label = Face_Fault
edge = Edge_Fault

friction = pylith.friction.StaticFriction
friction.label = static


quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2


friction.db_properties = spatialdata.spatialdb.UniformDB
friction.db_properties.label = Static friction
friction.db_properties.values = [friction-coefficient,cohesion]
friction.db_properties.data = [0.6,0.0*Pa]


traction_perturbation = pylith.faults.TractPerturbation

[pylithapp.timedependent.interfaces.fault.traction_perturbation]
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.iohandler.filename = fault_stress_uniform.spatialdb
db_initial.label = Initial fault tractions



# NOTE: There are additional settings specific to fault friction.
[pylithapp.petsc]
# associated with changes in the Lagrange multiplier imposed by the
# fault constitutive model.
friction_pc_type = asm
friction_sub_pc_factor_shift_type = nonzero
friction_ksp_max_it = 25
friction_ksp_gmres_restart = 30
# Uncomment to view details of friction sensitivity solve.
#friction_ksp_monitor = true
#friction_ksp_view = true
friction_ksp_converged_reason = true# Friction sensitivity solve used to compute the increment in slip



# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.domain.writer]
filename = output/dirichlet_bc.vtk

# Give basename for VTK domain output of solution over ground surface.
#[pylithapp.problem.formulation.output.subdomain]
# Name of nodeset for ground surface.
#label = Face_ZPos
#writer.filename = output/step01-groundsurf.vtk

# Give basename for VTK output of upper_crust state variables.
[pylithapp.timedependent.materials.crust.output]
# Average values over quadrature points.
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = output/dirichlet_bc-crust.vtk



